sites para treinar HTML, CSS, JavaScript

https://www.youtube.com/watch?v=SVAtnMRjVgM
https://www.youtube.com/watch?v=Mzo-t6_em0g
https://www.youtube.com/watch?v=343uFnRs6Fo
https://www.youtube.com/watch?v=2IV08sP9m3U
https://www.youtube.com/watch?v=3v2RUozpDVw&list=PLaLQ4gJXUd6DP5n1t8r4rwF40ahLgUlMg
https://www.youtube.com/watch?v=rP9Lk_PY8jM
https://www.youtube.com/watch?v=AB35iSr1YyA
https://www.youtube.com/watch?v=pXAGoP2G2vE
https://www.youtube.com/watch?v=BNcDPK8xPXA
https://www.youtube.com/watch?v=kIImolG-C1M
https://www.youtube.com/watch?v=PGrPFi8qplw
https://www.youtube.com/watch?v=Fhy-5CtVkiM
https://www.youtube.com/watch?v=y4ltLH9iK8E
https://www.youtube.com/watch?v=cudOY_pI2Fo
site mimo para ajudar a fazer o html e css

como utilizar o git / da sua maquina pro github

1 - instala o git na maquina, se não ja tiver instalado.

2 - abre o "Git Bash" configurar o git para vc:
- git config --global user.name 'Wellington Rodrigues' clicar em enter;
- git config --global user.email 'wellington87rodrigues@gmail.com' clica em enter.
o passo 2 é para uma configuração inicial, não mudou nada ainda.

3 - a pasta que vc quer enviar para o github(obs: não pode enviar pasta vazia), vc precisa entrar com ela no vscode. feito isso, clica no Crtl + j para abrir o terminal do vscode

4 - no terminal digite: "git init" - feito isso iniciará um repositorório git na pasta que vc quer enviar para o github (obs: perceba que foi criado uma pasta oculta chamada .git na pasta que vc quer enviar para o github).

5 - digite: "git add 'nomedoarquivo'"(esse comando serve para adicionarmos os arquivos para enviar ao github);
"git add -A" : esse comando faz todas as mudanças que eu optei por fazer, inclusive deletar arquivo. envia todos os arquivos e pasta que esta dentro da pasta que vc quer enviar ao github. 
"git add .": é igual ao comando anterior, porém ele não deleta.

6 - digite: "git status" (esse comando mostra como está o status do seu branch, o branch principal é o main, o galho principal; mostra se tiver algum arquivo para fazer commit, se existir; e mostra os arquivos que tiver adicionado no git add, comando anterior).

7 - digite "git commit -m 'descrição do commit'"

8 - agora precisa ir no github, se não tiver uma conta, vc cria. se tiver uma conta, vc cria um repositório com o mesmo nome da pasta raiz que vc quer enviar para lá, da uma descrição ao seu repositório, descreva o que vc está desenvolvendo.

9 - depois de criado, vc vai enviar a pasta com os arquivos para o github, vc copia esse codigo: https://github.com/wellington87rodrigues/Softex-FrontEnd.git
modelo da cópia anterior: https://github.com/seunomeperfil/nomedasuapastacriada.git

10 - agora vc digita: "git push -u origin main" para de fato enviar a sua pasta e arquivos para o github.(obs: se for a primeira vez que vc estiver fazendo subindo arquivos para o github, ele vai pedir para vc colocar seu usuário e senha do git, para autorizar o envio dos arquivos ao github. uma vez logado na maquina, não vai precisar logar novamente da proxima vez que vc quiser enviar um arquivo para o github).

como utilizar o git / github para da sua maquina

1 - para enviar o projeto do github pra sua maquina, o primeiro passo é digitar: "git clone 'nomedorepositório'", vc obtém o nome do repositório, indo no github, clicando no repositório que deseja, depois clica em <> code(o botão verde) e copia o link que vai aparecer. quando vc der o "git clone 'linkdorepositorio'" ele vai baixar o projeto completo para sua maquina.

Git

Git Setup

instalar o git: https://git-scm.com/

configurar Nome: $ git config --global user.name 'seunome'

configurar Email: $ git config -- global user.email 'email@email.com' 

Git Comandos

$ git init : iniciar um repositório

$ git add 'nomearquivo' : adicionar o arquivo ao repositório no git. 

$ git add -A : adicionamos todos os arquivos ao repositório git. excluindo arquivo.

$ git add . : adicionamos todos os arquivos ao repositório git. sem excluir arquivo.

$ git status : mostrar os arquivos que tiveram mudanças.

$ git commit sem texto: ao usar o $ git commit você entra no modo completo de comentário. com um editor de texto direto na linda de comnado. utilize esc + :wq para sair do mesmo.

$ git commit -m 'Descrição' : irá fazer o commit do código adicionado com uma mensagem.

Criar Repositório no GitHub

GitHub : Criar conta https://github.com/

novo repositório : https://github/new

adicionar diretório remoto : $ git remote add origin https://github.com/seuusuario/seurepoisitorio.git

push do primeiro commit : $ git push -u origin master

Branching

$ git branch 'nomebranch' : cria uma nova branch.

$ git checkout 'nomebranch' : irá mudar de branch.

$ git checkout -b 'novobranch', assim ele cria e muda de branch ao mesmo tempo.

vc é um usuário novo e vai entrar agora no projeto ja em andamento:

$ git clone 'nomeRepositório' : vc acha o nome do repositório na pasta tem o botão clone or download, clica nele e copia o link.

$ git pull : vai baixar para sua maquina todo o arquivo do projeto que está online.

$ git merge 'nomeRepositório' : quando tiver trabalhando em conjunto e outros desenvolvedores subiram as mudanças das funcionalidades para suas branch secundárias, utiliza o comando git merge para unir as mudanças a branch master.

lidando com pull request

no github : agora você possui um novo branch no github e pode fazer o pull request (juntar a master)

compare e pull request : pode adicionar comentários. create pull Request.

merge pull request : geralmente o líder do projeto / responsável por fazer o review do seu código. pode deletar o branch após o merge com o master.

quando deletar o branch do GitHub ele ainda vai aparecer na minha maquina. se eu der um git pull atualizando o meu código local com o código que está no GitHub, ainda assim, a branch criada, vai constar na minha maquina. o código para excluir a branch da minha maquina é $ git branch -d 'nomedobranch'.